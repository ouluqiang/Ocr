//配置apply
if (isApplication){
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin : 'kotlin-android'
apply plugin :  "androidx.navigation.safeargs.kotlin"
apply plugin :  'kotlin-kapt'


//plugins {
//    if (rootProject.ext.android.isApplication){
//        id 'com.android.application'
//    }else{
//        id 'com.android.library'
//    }
//    id 'kotlin-android'
////    id 'kotlin-android-extensions'
//    id "androidx.navigation.safeargs.kotlin"
//    id 'kotlin-kapt'
//}

//获取config文件中的配置 rootProject 项目的主对象
def config=rootProject.ext.android

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        if (isApplication) {
            applicationId "com.olq.main"
        }
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        versionCode config.versionCode
        versionName config.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //配置BuildConfig 代码中可以调用判断moudle是否为组件
        buildConfigField("boolean","isApplication",String.valueOf(isApplication))

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        //viewBinding插件
        viewBinding = true
    }
//    dataBinding {
//        enabled = true
//    }

    sourceSets{
        main{
            //如果moudle为组件则配置 AndroidManifest
            if (isApplication) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
                // 配置组件模式下的java代码主文件
                java.srcDirs 'src/main/java','src/main/dubug/java'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java.srcDir 'src/main/java'
            }
        }
    }


}

dependencies {

    api project(':baselibrary')
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation 'androidx.core:core-ktx:1.3.2'
//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'com.google.android.material:material:1.2.1'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}